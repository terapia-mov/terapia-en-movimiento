---
//Layout import
import MainLayout from "../../layouts/MainLayout.astro";
//Library import
import { contentfulClient } from "../../lib/contentful";
import { BlogPost } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { Image } from "@astrojs/image/components";
import { tagColor } from "../../js/utils";
//Content data import
export async function getStaticPaths() {
  const entries = await contentfulClient.getEntries<BlogPost>({
    content_type: "blogPost",
  });

  const options = {
    renderNode: {
      "embedded-asset-block": (node) => {
        const { title, file } = node.data.target.fields;
        const { url } = file;
        return `<img src="${url}" alt="${title}" />`;
      },
    },
  };

  const pages = entries.items.map((item) => ({
    params: { slug: item.fields.slug },
    props: {
      title: item.fields.title,
      description: item.fields.description,
      author: item.fields.author,
      category: item.fields.category,
      content: documentToHtmlString(item.fields.content, options),
      date: new Date(item.fields.date).toLocaleDateString(),
      image: {
        src: item.fields.image?.fields.file.url,
        alt: item.fields.image?.description,
      },
    },
  }));
  return pages;
}

console.log(Astro.props);

//Astro props
const { title, date, author, content, image, category } = Astro.props;

console.log(Astro.props);

import "../../styles/blogPost.css";
---

<MainLayout>
  <!--Post header -->
  <header class="flex flex-col gap-10">
    <Image
      src={image.src}
      alt={image.alt}
      width={1920}
      aspectRatio="10:4"
      format="webp"
      fit="cover"
    />
    <div
      id="head-content"
      class="px-8% pb-10 flex flex-col items-center justify-center gap-2 md:gap-4 text-center"
    >
      <small
        class:list={[
          "font-medium",
          "text-white",
          "text-[.5rem]",
          "md:text-[.75rem]",
          "md:px-[2.5]",
          "px-2",
          "py-1",
          "rounded-full",
          "leading-none",
          tagColor(category),
        ]}>{category}</small
      >
      <h1 class="font-bold text-3xl md:text-5xl uppercase">{title}</h1>
      <p class="text-xs md:text-sm">
        <span class="font-medium">{author}</span> | {date}
      </p>
    </div>
  </header>
  <!--Post content -->
  <div class="px-8% pb-10 flex flex-col gap-4">
    <article set:html={content} class="flex flex-col gap-4 leading-normal" />
  </div>
</MainLayout>
